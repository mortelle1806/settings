set t_Co=256

" Pathogen
execute pathogen#infect()
syntax on
filetype plugin indent on

syntax enable
set number
set relativenumber

" Do not activate hlsearch by default. See below that F3 lets you toggle it.
" set hlsearch

set incsearch
set ignorecase " often you want to ignore case when searching for text
set smartcase  " will turn on case-sensitivity only if the text to search contains uppercase characters, which is what you often want
set autoindent

set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" Will not cut words in the middle when wrap is on
set linebreak

"This makes sure a minimum number of lines is always visible above the cursor
set scrolloff=10

" set background=light
let hour = strftime("%H")
if 6 <= hour && hour < 18
  set background=light
else
  set background=dark
endif

colorscheme PaperColor

" <Leader>bg will switch color scheme between light and dark
map <Leader>bg :let &background = ( &background == "dark"? "light" : "dark" )<CR>

"<Leader> = \ by default

" source $MYVIMRC reloads the saved $MYVIMRC
:nmap <Leader>S :source $MYVIMRC

" opens $MYVIMRC for editing, or use :tabedit $MYVIMRC
:nmap <Leader>v :e $MYVIMRC

"-----------------------------------
"This unsets the "last search pattern" register by hitting return
"nnoremap <CR> :noh<CR><CR>

"set cursorline
"hi CursorLine term=NONE cterm=NONE ctermbg=none ctermfg=none

hi ModeMsg ctermfg=white ctermbg=darkred

" Change Color when entering Insert Mode
" autocmd InsertEnter * highlight  CursorLine ctermbg=darkred ctermfg=white

" Revert Color to default when leaving Insert Mode
" autocmd InsertLeave * highlight  CursorLine ctermbg=none ctermfg=none

" enable status line always
set laststatus=2

" redraw only when we need to.
set lazyredraw

set wildmenu            " visual autocomplete for command menu

" Indicate that the specified cscope commands must put their results in the quickfix window.
" The minus sign indicates to clear the quickfix window before putting the results.
set cscopequickfix=s-,c-,d-,i-,t-,e-,g-

let NERDTreeShowHidden=1
let g:NERDTreeWinPos = "right"

" Shift-F3 = previous match
" nnoremap <C-[>O1;2R N

" F3 = next match
" nnoremap <F3> n

" Quick save and exit
nnoremap <Leader><Leader> :xa<CR>

" Toggle NERDTree and switch to the editing buffer to the left
map <Leader>1 :NERDTreeToggle<CR>:wincmd h<CR>

" Toggle wrap in all windows (works in vimdiff) and show new value in current window.
nnoremap <Leader>2 :windo set wrap! wrap?<CR>

" Toggle search results highlighting
nnoremap <Leader>3 :set hlsearch!<CR>

" Toggle showing whitespace characters
nnoremap <Leader>4 :set list!<CR>

" Go to previous error in quickfix window
nnoremap _ :cp<CR>

" Go to next error in quickfix window
nnoremap + :cn<CR>

" https://stackoverflow.com/questions/657447/vim-clear-last-search-highlighting
" Double escape clears search pattern
nnoremap <silent> <Esc><Esc> :let @/=""<CR>

" Switch between windows easily
nnoremap <F12> <C-w><C-w>

" Switch between buffers easily
nnoremap <Insert> :bp<CR>
nnoremap <Home> :bn<CR>

" Switch between tabs easily
nnoremap <Delete> :tabp<CR>
nnoremap <End> :tabn<CR>

" Note the trailing space
inoremap <C-B> <3 

iabbrev coeur cœur
iabbrev oeil œil
iabbrev ps: P.-S.:
iabbrev ps2: P.-S.2:
iabbrev 3c <3 <3 <3... :)
iabbrev 4c <3 <3 <3 <3... :)
iabbrev 5c <3 <3 <3 <3 <3... :)
iabbrev 6c <3 <3 <3 <3 <3 <3... :)
iabbrev 7c <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 8c <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 9c <3 <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 10c <3 <3 <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 11c <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 12c <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 13c <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 14c <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3... :)
iabbrev 15c <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3 <3... :)

"set switchbuf+=usetab,newtab

" This is for CTRL+n autocompletion while in insert mode.
" The above command will change the 'completeopt' option so that Vim's popup menu doesn't select the first completion item, but rather just inserts the longest common text of all matches; and the menu will come up even if there's only one match. (The longest setting is responsible for the former effect and the menuone is responsible for the latter.) 
set completeopt=longest,menuone

" The following will make the cursor move by display lines when long lines are wrapping
" Source: http://vim.wikia.com/wiki/Move_cursor_by_display_lines_when_wrapping
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" Make - and + (in fact =) make browsing code with less RSI
noremap - 4gk
noremap = 4gj

" Quick save file (only if changed) and restore previous mode if any
nmap <Leader>s :update<CR>
vmap <Leader>s <Esc><Leader>sgv
imap <Leader>s <c-o><Leader>s

" Back tick as replacement for Esc. Tab is good too but as soon as you start
" programming, you regret it.
imap ` <Esc>

" Since tilda is now taken in insert mode, provide a way to write a tilda in
" insert mode using C-V C-V
inoremap <C-V><C-V> <C-V>u0060

" Make shift-Tab decrease indent like in most editors
inoremap <S-Tab> <C-d>

" Set up cursor behaviour:
if &term =~ "xterm\\|rxvt"
    " use an cursor of a certain color in insert mode
    let &t_SI = "\<Esc>]12;red\x7"
    " use a another cursor color otherwise
    let &t_EI = "\<Esc>]12;gray\x7"
    silent !echo -ne "\033]12;gray\007"
    " reset cursor when vim exits
    autocmd VimLeave * silent !echo -ne "\033]12;gray\007"
endif
